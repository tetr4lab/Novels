@inherits ItemListBase<Sheet>

@page "/book/{BookId:long?}"

@inject NavigationManager NavigationManager

<PageTitle>Book</PageTitle>

@if (DataSet.IsUnavailable) {
    <MudAlert Severity="Severity.Error" Elevation="3">Unable to connect to any of the specified database management hosts.</MudAlert>
} else if (!DataSet.IsReady || items is null || Book is null) {
    <MudProgressCircular Indeterminate="true" />
} else if (items.Count > 0) {
    <MudText>『@(Book?.Title ?? "")』 @(Book?.Author ?? "")</MudText>
    <MudSimpleTable>
        <thead>
            <tr>
                <th>#</th>
                <th>ChapterTitle</th>
                <th>ChapterSubTitle</th>
                <th>SheetTitle</th>
                <th>Updated</th>
            </tr>
        </thead>
        @foreach (var item in items) {
            var index = items.IndexOf (item) + 1;
            if (FilterFunc (item)) {
                <tr>
                    <td>@(index)</td>
                    <td>@item.ChapterTitle</td>
                    <td>@item.ChapterSubTitle</td>
                    <td>
                        <MudStack Row Spacing="1" Class="align-center">
                            <MudIconButton OnClick="@(() => ReadSheet (index))" Disabled="@(BookId != CurrentBookId)" Icon="@Icons.Material.Filled.MenuBook" Size="Size.Small" />
                            @item.SheetTitle
                        </MudStack>
                    </td>
                    <td>@item.SheetUpdatedAt</td>
                </tr>
            }
        }
    </MudSimpleTable>
    <MudScrollToTop TopOffset="1000">
        <MudFab Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.ArrowCircleUp" />
    </MudScrollToTop>
} else if (Book.IsDirectContent) {
    <MudText>Direct content found.</MudText>
} else {
    <MudText>No items found.</MudText>
}

@code {
    /// <summary>指定された書籍</summary>
    [Parameter] public long? BookId { get; set; } = null;

    /// <summary>着目中の書籍</summary>
    protected Book? Book { get; set; } = null;

    /// <summary>シートを開く</summary>
    protected void ReadSheet (int index) {
        if (Book is not null) {
            NavigationManager.NavigateTo ($"{NavigationManager.BaseUri}sheet/{CurrentBookId}/{index}");
        }
    }

    /// <summary>最初に着目書籍を切り替えてDataSetの再初期化を促す</summary>
    protected override async Task OnInitializedAsync() {
        // Uriパラメータを優先して着目書籍を特定する
        DataSet.CurrentBookId = BookId ?? CurrentBookId;
        if (BookId is not null && BookId != CurrentBookId) {
            // パラメータによって着目書籍が変更されたら、レイアウトとナビに渡す
            await SetCurrentBookId.InvokeAsync (BookId.Value);
        }
        await base.OnInitializedAsync ();
        // 着目書籍のIdを表示
        await SetSectionTitle.InvokeAsync ($"BookId: {CurrentBookId}");
        // 着目書籍オブジェクトを取得
        Book = DataSet.Books.Find (s => s.Id == CurrentBookId);
    }
}